// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p13
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be\be_codegen.cpp:152

#ifndef _TAO_IDL_MRITYPESUPPORTC_IM5SPR_H_
#define _TAO_IDL_MRITYPESUPPORTC_IM5SPR_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "mriCommon_Export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "MriC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO mriCommon_Export

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:38

namespace Mri
{

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Mri::Aux2Strings, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> Aux2StringsSeq;
  

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_AUX2STRINGSTYPESUPPORT__VAR_OUT_CH_)
#define _MRI_AUX2STRINGSTYPESUPPORT__VAR_OUT_CH_

  class Aux2StringsTypeSupport;
  typedef Aux2StringsTypeSupport *Aux2StringsTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        Aux2StringsTypeSupport
      >
    Aux2StringsTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        Aux2StringsTypeSupport
      >
    Aux2StringsTypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export Aux2StringsTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef Aux2StringsTypeSupport_ptr _ptr_type;
    typedef Aux2StringsTypeSupport_var _var_type;
    typedef Aux2StringsTypeSupport_out _out_type;

    // The static operations.
    static Aux2StringsTypeSupport_ptr _duplicate (Aux2StringsTypeSupport_ptr obj);

    static void _tao_release (Aux2StringsTypeSupport_ptr obj);

    static Aux2StringsTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static Aux2StringsTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Aux2StringsTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Aux2StringsTypeSupport (void);

    

    virtual ~Aux2StringsTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Aux2StringsTypeSupport (const Aux2StringsTypeSupport &);

    void operator= (const Aux2StringsTypeSupport &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_AUX2STRINGSDATAWRITER__VAR_OUT_CH_)
#define _MRI_AUX2STRINGSDATAWRITER__VAR_OUT_CH_

  class Aux2StringsDataWriter;
  typedef Aux2StringsDataWriter *Aux2StringsDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        Aux2StringsDataWriter
      >
    Aux2StringsDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        Aux2StringsDataWriter
      >
    Aux2StringsDataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export Aux2StringsDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef Aux2StringsDataWriter_ptr _ptr_type;
    typedef Aux2StringsDataWriter_var _var_type;
    typedef Aux2StringsDataWriter_out _out_type;

    // The static operations.
    static Aux2StringsDataWriter_ptr _duplicate (Aux2StringsDataWriter_ptr obj);

    static void _tao_release (Aux2StringsDataWriter_ptr obj);

    static Aux2StringsDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static Aux2StringsDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Aux2StringsDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Mri::Aux2Strings & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Mri::Aux2Strings & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Mri::Aux2Strings & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Mri::Aux2Strings & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Mri::Aux2Strings & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Mri::Aux2Strings & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Mri::Aux2Strings & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Mri::Aux2Strings & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Mri::Aux2Strings & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Mri::Aux2Strings & instance_data) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Aux2StringsDataWriter (void);

    

    virtual ~Aux2StringsDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Aux2StringsDataWriter (const Aux2StringsDataWriter &);

    void operator= (const Aux2StringsDataWriter &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_AUX2STRINGSDATAREADER__VAR_OUT_CH_)
#define _MRI_AUX2STRINGSDATAREADER__VAR_OUT_CH_

  class Aux2StringsDataReader;
  typedef Aux2StringsDataReader *Aux2StringsDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        Aux2StringsDataReader
      >
    Aux2StringsDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        Aux2StringsDataReader
      >
    Aux2StringsDataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export Aux2StringsDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef Aux2StringsDataReader_ptr _ptr_type;
    typedef Aux2StringsDataReader_var _var_type;
    typedef Aux2StringsDataReader_out _out_type;

    // The static operations.
    static Aux2StringsDataReader_ptr _duplicate (Aux2StringsDataReader_ptr obj);

    static void _tao_release (Aux2StringsDataReader_ptr obj);

    static Aux2StringsDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static Aux2StringsDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Aux2StringsDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Mri::Aux2StringsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Mri::Aux2StringsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Mri::Aux2Strings & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Mri::Aux2Strings & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Mri::Aux2StringsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Mri::Aux2StringsSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Mri::Aux2StringsSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Mri::Aux2Strings & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Mri::Aux2Strings & instance_data) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Aux2StringsDataReader (void);

    

    virtual ~Aux2StringsDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Aux2StringsDataReader (const Aux2StringsDataReader &);

    void operator= (const Aux2StringsDataReader &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:67

} // module Mri

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:38

namespace Mri
{

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Mri::V2XMessage, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> V2XMessageSeq;
  

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_V2XMESSAGETYPESUPPORT__VAR_OUT_CH_)
#define _MRI_V2XMESSAGETYPESUPPORT__VAR_OUT_CH_

  class V2XMessageTypeSupport;
  typedef V2XMessageTypeSupport *V2XMessageTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        V2XMessageTypeSupport
      >
    V2XMessageTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        V2XMessageTypeSupport
      >
    V2XMessageTypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export V2XMessageTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef V2XMessageTypeSupport_ptr _ptr_type;
    typedef V2XMessageTypeSupport_var _var_type;
    typedef V2XMessageTypeSupport_out _out_type;

    // The static operations.
    static V2XMessageTypeSupport_ptr _duplicate (V2XMessageTypeSupport_ptr obj);

    static void _tao_release (V2XMessageTypeSupport_ptr obj);

    static V2XMessageTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static V2XMessageTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static V2XMessageTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    V2XMessageTypeSupport (void);

    

    virtual ~V2XMessageTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    V2XMessageTypeSupport (const V2XMessageTypeSupport &);

    void operator= (const V2XMessageTypeSupport &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_V2XMESSAGEDATAWRITER__VAR_OUT_CH_)
#define _MRI_V2XMESSAGEDATAWRITER__VAR_OUT_CH_

  class V2XMessageDataWriter;
  typedef V2XMessageDataWriter *V2XMessageDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        V2XMessageDataWriter
      >
    V2XMessageDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        V2XMessageDataWriter
      >
    V2XMessageDataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export V2XMessageDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef V2XMessageDataWriter_ptr _ptr_type;
    typedef V2XMessageDataWriter_var _var_type;
    typedef V2XMessageDataWriter_out _out_type;

    // The static operations.
    static V2XMessageDataWriter_ptr _duplicate (V2XMessageDataWriter_ptr obj);

    static void _tao_release (V2XMessageDataWriter_ptr obj);

    static V2XMessageDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static V2XMessageDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static V2XMessageDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Mri::V2XMessage & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Mri::V2XMessage & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Mri::V2XMessage & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Mri::V2XMessage & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Mri::V2XMessage & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Mri::V2XMessage & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Mri::V2XMessage & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Mri::V2XMessage & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Mri::V2XMessage & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Mri::V2XMessage & instance_data) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    V2XMessageDataWriter (void);

    

    virtual ~V2XMessageDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    V2XMessageDataWriter (const V2XMessageDataWriter &);

    void operator= (const V2XMessageDataWriter &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_V2XMESSAGEDATAREADER__VAR_OUT_CH_)
#define _MRI_V2XMESSAGEDATAREADER__VAR_OUT_CH_

  class V2XMessageDataReader;
  typedef V2XMessageDataReader *V2XMessageDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        V2XMessageDataReader
      >
    V2XMessageDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        V2XMessageDataReader
      >
    V2XMessageDataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export V2XMessageDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef V2XMessageDataReader_ptr _ptr_type;
    typedef V2XMessageDataReader_var _var_type;
    typedef V2XMessageDataReader_out _out_type;

    // The static operations.
    static V2XMessageDataReader_ptr _duplicate (V2XMessageDataReader_ptr obj);

    static void _tao_release (V2XMessageDataReader_ptr obj);

    static V2XMessageDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static V2XMessageDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static V2XMessageDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Mri::V2XMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Mri::V2XMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Mri::V2XMessage & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Mri::V2XMessage & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Mri::V2XMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Mri::V2XMessageSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Mri::V2XMessageSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Mri::V2XMessage & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Mri::V2XMessage & instance_data) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    V2XMessageDataReader (void);

    

    virtual ~V2XMessageDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    V2XMessageDataReader (const V2XMessageDataReader &);

    void operator= (const V2XMessageDataReader &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:67

} // module Mri

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:38

namespace Mri
{

  // TAO_IDL - Generated from
  // be\be_visitor_sequence\sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Mri::VehData, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> VehDataSeq;
  

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_VEHDATATYPESUPPORT__VAR_OUT_CH_)
#define _MRI_VEHDATATYPESUPPORT__VAR_OUT_CH_

  class VehDataTypeSupport;
  typedef VehDataTypeSupport *VehDataTypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        VehDataTypeSupport
      >
    VehDataTypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        VehDataTypeSupport
      >
    VehDataTypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export VehDataTypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef VehDataTypeSupport_ptr _ptr_type;
    typedef VehDataTypeSupport_var _var_type;
    typedef VehDataTypeSupport_out _out_type;

    // The static operations.
    static VehDataTypeSupport_ptr _duplicate (VehDataTypeSupport_ptr obj);

    static void _tao_release (VehDataTypeSupport_ptr obj);

    static VehDataTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static VehDataTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static VehDataTypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    VehDataTypeSupport (void);

    

    virtual ~VehDataTypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    VehDataTypeSupport (const VehDataTypeSupport &);

    void operator= (const VehDataTypeSupport &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_VEHDATADATAWRITER__VAR_OUT_CH_)
#define _MRI_VEHDATADATAWRITER__VAR_OUT_CH_

  class VehDataDataWriter;
  typedef VehDataDataWriter *VehDataDataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        VehDataDataWriter
      >
    VehDataDataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        VehDataDataWriter
      >
    VehDataDataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export VehDataDataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef VehDataDataWriter_ptr _ptr_type;
    typedef VehDataDataWriter_var _var_type;
    typedef VehDataDataWriter_out _out_type;

    // The static operations.
    static VehDataDataWriter_ptr _duplicate (VehDataDataWriter_ptr obj);

    static void _tao_release (VehDataDataWriter_ptr obj);

    static VehDataDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static VehDataDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static VehDataDataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Mri::VehData & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Mri::VehData & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Mri::VehData & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Mri::VehData & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Mri::VehData & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Mri::VehData & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Mri::VehData & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Mri::VehData & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Mri::VehData & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Mri::VehData & instance_data) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    VehDataDataWriter (void);

    

    virtual ~VehDataDataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    VehDataDataWriter (const VehDataDataWriter &);

    void operator= (const VehDataDataWriter &);
  };

  // TAO_IDL - Generated from
  // be\be_interface.cpp:751

#if !defined (_MRI_VEHDATADATAREADER__VAR_OUT_CH_)
#define _MRI_VEHDATADATAREADER__VAR_OUT_CH_

  class VehDataDataReader;
  typedef VehDataDataReader *VehDataDataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        VehDataDataReader
      >
    VehDataDataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        VehDataDataReader
      >
    VehDataDataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be\be_visitor_interface\interface_ch.cpp:43

  class mriCommon_Export VehDataDataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be\be_type.cpp:307

    typedef VehDataDataReader_ptr _ptr_type;
    typedef VehDataDataReader_var _var_type;
    typedef VehDataDataReader_out _out_type;

    // The static operations.
    static VehDataDataReader_ptr _duplicate (VehDataDataReader_ptr obj);

    static void _tao_release (VehDataDataReader_ptr obj);

    static VehDataDataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static VehDataDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static VehDataDataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Mri::VehDataSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Mri::VehDataSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Mri::VehData & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Mri::VehData & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Mri::VehDataSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Mri::VehDataSeq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Mri::VehDataSeq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Mri::VehData & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Mri::VehData & instance_data) = 0;

    // TAO_IDL - Generated from
    // be\be_visitor_interface\interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    VehDataDataReader (void);

    

    virtual ~VehDataDataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    VehDataDataReader (const VehDataDataReader &);

    void operator= (const VehDataDataReader &);
  };

// TAO_IDL - Generated from
// be\be_visitor_module\module_ch.cpp:67

} // module Mri

// TAO_IDL - Generated from
// be\be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_MRI_AUX2STRINGSTYPESUPPORT__TRAITS_)
#define _MRI_AUX2STRINGSTYPESUPPORT__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::Aux2StringsTypeSupport>
  {
    static ::Mri::Aux2StringsTypeSupport_ptr duplicate (
        ::Mri::Aux2StringsTypeSupport_ptr p);
    static void release (
        ::Mri::Aux2StringsTypeSupport_ptr p);
    static ::Mri::Aux2StringsTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::Aux2StringsTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_AUX2STRINGSDATAWRITER__TRAITS_)
#define _MRI_AUX2STRINGSDATAWRITER__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::Aux2StringsDataWriter>
  {
    static ::Mri::Aux2StringsDataWriter_ptr duplicate (
        ::Mri::Aux2StringsDataWriter_ptr p);
    static void release (
        ::Mri::Aux2StringsDataWriter_ptr p);
    static ::Mri::Aux2StringsDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::Aux2StringsDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_AUX2STRINGSDATAREADER__TRAITS_)
#define _MRI_AUX2STRINGSDATAREADER__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::Aux2StringsDataReader>
  {
    static ::Mri::Aux2StringsDataReader_ptr duplicate (
        ::Mri::Aux2StringsDataReader_ptr p);
    static void release (
        ::Mri::Aux2StringsDataReader_ptr p);
    static ::Mri::Aux2StringsDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::Aux2StringsDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_V2XMESSAGETYPESUPPORT__TRAITS_)
#define _MRI_V2XMESSAGETYPESUPPORT__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::V2XMessageTypeSupport>
  {
    static ::Mri::V2XMessageTypeSupport_ptr duplicate (
        ::Mri::V2XMessageTypeSupport_ptr p);
    static void release (
        ::Mri::V2XMessageTypeSupport_ptr p);
    static ::Mri::V2XMessageTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::V2XMessageTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_V2XMESSAGEDATAWRITER__TRAITS_)
#define _MRI_V2XMESSAGEDATAWRITER__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::V2XMessageDataWriter>
  {
    static ::Mri::V2XMessageDataWriter_ptr duplicate (
        ::Mri::V2XMessageDataWriter_ptr p);
    static void release (
        ::Mri::V2XMessageDataWriter_ptr p);
    static ::Mri::V2XMessageDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::V2XMessageDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_V2XMESSAGEDATAREADER__TRAITS_)
#define _MRI_V2XMESSAGEDATAREADER__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::V2XMessageDataReader>
  {
    static ::Mri::V2XMessageDataReader_ptr duplicate (
        ::Mri::V2XMessageDataReader_ptr p);
    static void release (
        ::Mri::V2XMessageDataReader_ptr p);
    static ::Mri::V2XMessageDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::V2XMessageDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_VEHDATATYPESUPPORT__TRAITS_)
#define _MRI_VEHDATATYPESUPPORT__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::VehDataTypeSupport>
  {
    static ::Mri::VehDataTypeSupport_ptr duplicate (
        ::Mri::VehDataTypeSupport_ptr p);
    static void release (
        ::Mri::VehDataTypeSupport_ptr p);
    static ::Mri::VehDataTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::VehDataTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_VEHDATADATAWRITER__TRAITS_)
#define _MRI_VEHDATADATAWRITER__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::VehDataDataWriter>
  {
    static ::Mri::VehDataDataWriter_ptr duplicate (
        ::Mri::VehDataDataWriter_ptr p);
    static void release (
        ::Mri::VehDataDataWriter_ptr p);
    static ::Mri::VehDataDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::VehDataDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_MRI_VEHDATADATAREADER__TRAITS_)
#define _MRI_VEHDATADATAREADER__TRAITS_

  template<>
  struct mriCommon_Export Objref_Traits< ::Mri::VehDataDataReader>
  {
    static ::Mri::VehDataDataReader_ptr duplicate (
        ::Mri::VehDataDataReader_ptr p);
    static void release (
        ::Mri::VehDataDataReader_ptr p);
    static ::Mri::VehDataDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Mri::VehDataDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be\be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "MriTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

